ggl() +
theme(legend.position = "none")
switch(return_obj,
"combined" = gg_map + gg_bar + plot_layout(widths = c(3, 1)),
"map" = gg_map,
"bar" = gg_bar)
}
confirmed_cases %>%
filter(lga_name19 %in% SYD_LGA$LGA_NAME19) %>%
count(lga_name19, name="Total_cases") %>%
rename(LGA_NAME19 = lga_name19) %>%
mutate(LGA_NAME19 = fct_reorder(LGA_NAME19, Total_cases)) %>%
plot_map_TL(SYD_LGA, "LGA_NAME19", "Total_cases",
"Total Covid-19 cases by LGA (SYD Metro)", show_count = T)
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Total_cases",
"Total Covid-19 cases by POA (SYD Metro)",
show_count = T, label_size = 2)
confirmed_cases %>%
filter(!(postcode %in% c(2026, 2145, 2170))) %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Total_cases",
"Total Covid-19 cases by POA (SYD Metro), excluding top 3 POA",
show_count = T, label_size = 2)
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(year_quarter = paste(year(notification_date), "Q",
quarter(notification_date), sep="-")) %>%
count(year_quarter, postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(year_quarter, postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
group_by(year_quarter) %>%
mutate(Accumulated_share = (Accumulated_cases/sum(Accumulated_cases, na.rm=T))) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
ungroup() %>%
filter(!is.na(year_quarter)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Accumulated_share",
"Total Covid-19 cases by POA (SYD Metro)",
return_obj="map") +
facet_wrap(~year_quarter)
confirmed_cases %>%
filter(year(notification_date) == 2020,
month(notification_date) %in% 3:5) %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(isoweek = isoweek(notification_date)) %>%
count(isoweek, postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(isoweek, postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
group_by(isoweek) %>%
mutate(Accumulated_share = (Accumulated_cases/sum(Accumulated_cases, na.rm=T))) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
ungroup() %>%
filter(!is.na(isoweek)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Accumulated_share",
"Total Covid-19 cases by POA (SYD Metro)",
return_obj="map") +
facet_wrap(~isoweek)
confirmed_cases %>%
filter(!(postcode %in% c(2026, 2145, 2170))) %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Total_cases",
"Total Covid-19 cases by POA (SYD Metro), excluding top 3 POA",
show_count = T, label_size = 2)
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(year_quarter = paste(year(notification_date), "Q",
quarter(notification_date), sep="-")) %>%
count(year_quarter, postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(year_quarter, postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
group_by(year_quarter) %>%
mutate(Accumulated_share = (Accumulated_cases/sum(Accumulated_cases, na.rm=T))) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Accumulated_share",
"Total Covid-19 cases by POA (SYD Metro)",
return_obj="map") +
facet_wrap(~year_quarter)
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(year_quarter = paste(year(notification_date), "Q",
quarter(notification_date), sep="-")) %>%
count(year_quarter, postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(year_quarter, postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
group_by(year_quarter) %>%
mutate(Accumulated_share = (Accumulated_cases/sum(Accumulated_cases, na.rm=T))) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases))
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(year_quarter = paste(year(notification_date), "Q",
quarter(notification_date), sep="-")) %>%
count(year_quarter, postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(year_quarter, postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
group_by(year_quarter) %>%
mutate(Accumulated_share = (Accumulated_cases/sum(Accumulated_cases, na.rm=T))) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>% count(year_quarter, POA_NAME16)
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(year_quarter = paste(year(notification_date), "Q",
quarter(notification_date), sep="-")) %>%
count(year_quarter, postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(year_quarter, postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
group_by(year_quarter) %>%
mutate(Accumulated_share = (Accumulated_cases/sum(Accumulated_cases, na.rm=T))) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>% count(year_quarter, POA_NAME16) %>% arrange(n)
plot_map_TL <- function(df, sdf, key_var, fill_var, title_text,
show_count=FALSE, label_size=3,
return_obj="combined") {
# browser()
df['id'] <- unique(fortify(sdf)$id)[match(df[[key_var]],
sdf[[key_var]])] %>% as.character()
sdf_tidy <- fortify(sdf) %>%
left_join(df, by="id")
sdf_tidy[[fill_var]] <- replace_na(sdf_tidy[[fill_var]], 0)
gg_map <- ggplot(sdf_tidy) +
geom_map(inherit.aes = FALSE, alpha=.85,
aes_string(map_id = "id", fill= fill_var),
map = sdf_tidy, col="grey83", size=NA) +
expand_limits(x = sdf_tidy$long, y = sdf_tidy$lat) +
# xlim(150.7,151.48) + ylim(-34.1,-33.5) +
# scale_fill_gradient(low="white", high="darkred") +
scale_fill_viridis_c(breaks = pretty_breaks(5)) +
scale_alpha_continuous(range = c(0,.3)) +
labs(title = title_text) +
theme_void() +
# theme(legend.position = "right")
theme(legend.position = c(.93,.15))
if (show_count) {
sdf_centroids <- getSpPPolygonsLabptSlots(sdf) %>% as.data.frame()
sdf_centroids[[key_var]] <- sdf[[key_var]]
label_df <- left_join(df, sdf_centroids, by=key_var)
gg_map <- gg_map +
geom_text(
data = label_df,
aes_string(x="V1", y="V2", label=fill_var),
size=label_size, col="white")
}
gg_bar <- df %>%
# top_n(20) %>% # There is a bug in top_n()
slice_max(order_by = !!as.name(fill_var), n=20) %>%
ggplot(aes_string(x=key_var, y=fill_var, fill=fill_var)) +
geom_col(width=.8) +
geom_text(aes_string(label=fill_var),
hjust=0, vjust=.3, size=3.3, col="black") +
scale_fill_viridis_c(breaks = pretty_breaks(5)) +
coord_flip() +
xlab("") +
ylim(c(0, 1.1*max(df[[fill_var]], na.rm=T))) +
labs(subtitle = paste0("Top 20 ", key_var)) +
ggl() +
theme(legend.position = "none")
switch(return_obj,
"combined" = gg_map + gg_bar + plot_layout(widths = c(3, 1)),
"map" = gg_map,
"bar" = gg_bar)
}
confirmed_cases %>%
filter(lga_name19 %in% SYD_LGA$LGA_NAME19) %>%
count(lga_name19, name="Total_cases") %>%
rename(LGA_NAME19 = lga_name19) %>%
mutate(LGA_NAME19 = fct_reorder(LGA_NAME19, Total_cases)) %>%
plot_map_TL(SYD_LGA, "LGA_NAME19", "Total_cases",
"Total Covid-19 cases by LGA (SYD Metro)", show_count = T)
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Total_cases",
"Total Covid-19 cases by POA (SYD Metro)",
show_count = T, label_size = 2)
confirmed_cases %>%
filter(!(postcode %in% c(2026, 2145, 2170))) %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Total_cases",
"Total Covid-19 cases by POA (SYD Metro), excluding top 3 POA",
show_count = T, label_size = 2)
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(year_quarter = paste(year(notification_date), "Q",
quarter(notification_date), sep="-")) %>%
count(year_quarter, postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(year_quarter, postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
group_by(year_quarter) %>%
mutate(Accumulated_share = (Accumulated_cases/sum(Accumulated_cases, na.rm=T))) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Accumulated_share",
"Total Covid-19 cases by POA (SYD Metro)",
return_obj="map") +
facet_wrap(~year_quarter)
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(year_quarter = paste(year(notification_date), "Q",
quarter(notification_date), sep="-")) %>%
count(postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Accumulated_share",
"Total Covid-19 cases by POA (SYD Metro)",
return_obj="map")
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(year_quarter = paste(year(notification_date), "Q",
quarter(notification_date), sep="-")) %>%
count(postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases))
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(year_quarter = paste(year(notification_date), "Q",
quarter(notification_date), sep="-")) %>%
count(postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Accumulated_share",
"Total Covid-19 cases by POA (SYD Metro)",
return_obj="map")
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Accumulated_share",
"Total Covid-19 cases by POA (SYD Metro)",
return_obj="map")
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases))
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Total_cases",
"Total Covid-19 cases by POA (SYD Metro)",
return_obj="map")
fortify(SYD_POA) %>%
left_join(confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Total_cases",
"Total Covid-19 cases by POA (SYD Metro)",
show_count = T, label_size = 2), by="id")
fortify(SYD_POA) %>%
left_join(confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)))
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Total_cases",
"Total Covid-19 cases by POA (SYD Metro)",
show_count = T, label_size = 2)
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases))
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases)) %>% mutate(dd = Total_cases) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "dd",
"Total Covid-19 cases by POA (SYD Metro)",
show_count = T, label_size = 2)
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
count(postcode, name="Total_cases") %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Total_cases))
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(year_quarter = paste(year(notification_date), "Q",
quarter(notification_date), sep="-")) %>%
count(year_quarter, postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(year_quarter, postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
group_by(year_quarter) %>%
mutate(Accumulated_share = (Accumulated_cases/sum(Accumulated_cases, na.rm=T))) %>%
rename(POA_NAME16 = postcode) %>%
mutate(POA_NAME16 = fct_reorder(as.factor(POA_NAME16), Accumulated_cases)) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Accumulated_share",
"Total Covid-19 cases by POA (SYD Metro)",
return_obj="map") +
facet_wrap(~year_quarter)
confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(year_quarter = paste(year(notification_date), "Q",
quarter(notification_date), sep="-")) %>%
count(year_quarter, postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(year_quarter, postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
group_by(year_quarter) %>%
mutate(Accumulated_share = (Accumulated_cases/sum(Accumulated_cases, na.rm=T))) %>%
rename(POA_NAME16 = postcode) %>%
plot_map_TL(SYD_POA, "POA_NAME16", "Accumulated_share",
"Total Covid-19 cases by POA (SYD Metro)",
return_obj="map") +
facet_wrap(~year_quarter)
sdf <- SYD_POA
df <- confirmed_cases %>%
filter(as.character(postcode) %in% SYD_POA$POA_NAME16) %>%
mutate(year_quarter = paste(year(notification_date), "Q",
quarter(notification_date), sep="-")) %>%
count(year_quarter, postcode, name="Total_cases") %>%
group_by(postcode) %>%
mutate(Accumulated_cases = cumsum(Total_cases)) %>%
ungroup() %>%
complete(year_quarter, postcode) %>%
replace_na(list(Accumulated_cases=0)) %>%
group_by(year_quarter) %>%
mutate(Accumulated_share = (Accumulated_cases/sum(Accumulated_cases, na.rm=T))) %>%
rename(POA_NAME16 = postcode)
df
key_var= "POA_NAME16"
fill_var = "Accumulated_share"
df
# browser()
df['id'] <- unique(fortify(sdf)$id)[match(df[[key_var]],
sdf[[key_var]])] %>% as.character()
sdf_tidy <- fortify(sdf) %>%
left_join(df, by="id")
sdf_tidy[[fill_var]] <- replace_na(sdf_tidy[[fill_var]], 0)
sdf_tidy
sdf_tidy %>% head
sdf_tidy %>% count(POA_NAME16)
SYD_POA$POA_NAME16
fortify(sdf) %>% count(POA_NAME16)
fortify(sdf) %>% head
fortify(sdf) %>% count(id)
sdf <- SYD_POA
sdf_tidy <- fortify(sdf) %>%
left_join(df, by="id")
sdf_tidy %>% head
sdf_tidy[[fill_var]] %>% count
sdf_tidy[[fill_var]] %>% table
sdf_tidy[[fill_var]] <- replace_na(sdf_tidy[[fill_var]], 0)
sdf_tidy %>% head
fill_var
fill_var %>% count(POA_NAME16)
sdf_tidy %>% count(POA_NAME16)
df %>% count(id)
df %>% ungroup() %>% count(id)
sum(is.na(df$id))
# browser()
df['id'] <- unique(fortify(sdf)$id)[match(df[[key_var]],
sdf[[key_var]])] %>% as.character()
sum(is.na(df$id))
sdf_tidy <- fortify(sdf) %>%
left_join(df, by="id")
sdf_tidy %>% head
fortify(sdf) %>% head
fortify(sdf) %>% count(id)
fortify(sdf) %>%
left_join(df, by="id") %>% count(id)
fortify(sdf) %>%
left_join(df, by="id") %>% count(POA_NAME16)
df %>% count(POA_NAME16)
df %>% ungroup() %>% count(POA_NAME16)
sum(is.na(df$POA_NAME16))
sum(is.na(fortify(sdf)$id)
sum(is.na(fortify(sdf)$id))
sum(fortify(sdf)$id %in% df$id)
sum(!(is.na(fortify(sdf)$id))
sum(!(is.na(fortify(sdf)$id)))
plot_map_TL <- function(df, sdf, key_var, fill_var, title_text,
show_count=FALSE, label_size=3,
return_obj="combined") {
# browser()
df['id'] <- unique(fortify(sdf)$id)[match(df[[key_var]],
sdf[[key_var]])] %>% as.character()
sdf_tidy <- fortify(sdf) %>%
left_join(df, by="id")
sdf_tidy[[fill_var]] <- replace_na(sdf_tidy[[fill_var]], 0)
gg_map <- ggplot(sdf_tidy) +
geom_map(inherit.aes = FALSE, alpha=.85,
aes_string(map_id = "id", fill= fill_var),
map = sdf_tidy, col="grey83", size=NA) +
expand_limits(x = sdf_tidy$long, y = sdf_tidy$lat) +
# xlim(150.7,151.48) + ylim(-34.1,-33.5) +
# scale_fill_gradient(low="white", high="darkred") +
scale_fill_viridis_c(breaks = pretty_breaks(5)) +
scale_alpha_continuous(range = c(0,.3)) +
labs(title = title_text) +
theme_void() +
# theme(legend.position = "right")
theme(legend.position = c(.93,.15))
if (show_count) {
sdf_centroids <- getSpPPolygonsLabptSlots(sdf) %>% as.data.frame()
sdf_centroids[[key_var]] <- sdf[[key_var]]
label_df <- left_join(df, sdf_centroids, by=key_var)
gg_map <- gg_map +
geom_text(
data = label_df,
aes_string(x="V1", y="V2", label=fill_var),
size=label_size, col="white")
}
gg_bar <- df %>%
# top_n(20) %>% # There is a bug in top_n()
slice_max(order_by = !!as.name(fill_var), n=20) %>%
ggplot(aes_string(x=key_var, y=fill_var, fill=fill_var)) +
geom_col(width=.8) +
geom_text(aes_string(label=fill_var),
hjust=0, vjust=.3, size=3.3, col="black") +
scale_fill_viridis_c(breaks = pretty_breaks(5)) +
coord_flip() +
xlab("") +
ylim(c(0, 1.1*max(df[[fill_var]], na.rm=T))) +
labs(subtitle = paste0("Top 20 ", key_var)) +
ggl() +
theme(legend.position = "none")
switch(return_obj,
"combined" = gg_map + gg_bar + plot_layout(widths = c(3, 1)),
"map" = gg_map,
"bar" = gg_bar)
}
confirmed_cases %>%
filter(lga_name19 %in% SYD_LGA$LGA_NAME19) %>%
count(lga_name19, name="Total_cases") %>%
rename(LGA_NAME19 = lga_name19) %>%
mutate(LGA_NAME19 = fct_reorder(LGA_NAME19, Total_cases)) %>%
plot_map_TL(SYD_LGA, "LGA_NAME19", "Total_cases",
"Total Covid-19 cases by LGA (SYD Metro)", show_count = T)
